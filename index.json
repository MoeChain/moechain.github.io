[{"content":"\n\n在写这篇文章前，茯苓已经写了一篇介绍比特币的文章，如果对区块链和比特币一头雾水的话，建议从上一篇文章开始阅读\n(｡･ω･｡)\n咳咳，这篇文章有那么一丢丢技术含量，不过我会尽量使用通俗易懂的文字来写这篇文章的。\n\n比特币诞生之后又过了蛮长的一段时间后，人们才把对比特币的惊艳转化为研究它底层的动力。我们将比特币的底层技术称之为区块链（blockchain）。比特币无疑是区块链的鼻祖，同时也是区块链最成功的应用（目前来说）。\n\n区块链是个好东西，使用它记录的数据具有不可变性，这样我们便可以使电子存证变的简单起来。比如说，可以把合同，版权丢到区块链上。以太坊的问世，让我们看到了区块链的另外一个应用方式即智能合约（虽然以太坊很了不起，但是现在不用知道以太坊是什么，当它是个名词就行了）。通过智能合约，我们可以做的事情就更多了，开发基于区块链的应用也变的越来越方便。\n\n好啦，表层次的东西说完了，现在我们往深处走些。\n\n区块链不是一项单独的技术，实际上区块链是由许多技术共同构成的，简单的拆分一下，区块链包含这么几项技术：p2p，密码学，以及分布式共识算法，接下来我们便说说这三项技术(｡･ω･｡)\n\n首先，我们来说下p2p～\n咳咳，茯苓觉得，如果你是真.老司机，那么你一定知道p2p是啥。啊呀，是种子啦，才不是什么p2p理财呢（默默捂脸）。p2p的全名是peer to peer翻译成中文的话就是点对点，我们通过p2p可以构建一个去中心的网络，然后可以通过这个去中心网络共享一些东西，比如电影、歌曲、图片什么的。我们所熟知的电驴，迅雷，bittorrent都是和p2p技术有很大关联的。╮(╯▽╰)╭这么bug的东西版权方、网络运营商对其自然不怎么待见，所以没事就封杀一下～就这样过去了一段时间后，这些p2p应用采用了一种基于DHT的kademlia算法（简称kad），使得整个网络更加去中心化。比特币使用的p2p算法和kad还是蛮像的，只不过改变了许多内容。随着越来越多的人开始研究区块链，现在的区块链技术使用的p2p网络也更为强健～\n￼\n![看起来就很随意的p2p示意图](/images/2017-9-27-what-is-blockchain-mini-p2p.jpg)\n\n接下来我们来看看关于区块链的密码学(￣▽￣)\n\n首先我们来了解一下电子签名～\n\n在区块链上你的每一笔交易都会打上电子签名，以证明这笔交易是你的。签名我们都知道，就是用笔在纸或者其它载体上签上你的名字，但是，数字签名是个啥？难道是用笔在电脑上签名么？当然不是～电子签名呢其实是密码学的一个应用即签名算法，使用签名算法我们需要两个东西，一个是私钥，一个是公钥。通过私钥可以为一段信息签个名变成一串长长的字符，而通过公钥可以验证被签了名的信息是否属于你。\n这个公钥可以通过私钥获得，\n在区块链中，许多需要验证的地方都使用了电子签名，所以说私钥一定要保管好，不然通过私钥签过的东西可就不属于你了。\n\n区块链上的东西，很多都是需要加密的，那么用什么加密呢？当然还是算法啦，有用sha2的，有用sha3的，还有使用blake的，通常来说，我们认为sha3更为安全。shax算法是怎么应用的呢？在这里举个栗子：比如说，我想加密“茯苓是个可爱的男孩子”这段话，然后把shax算法想成一个机器，我们将这段话丢进去机器便会吐出一个看不懂的字符“gcfidvvjdjjdkwjavsfhcmdkwbcgsjjs”（这是我乱打的）。然后加密就完成了。\n￼\n接下来是地址，地址是基于sha算法的一个应用。用过虚拟货币的小伙伴应该知道这个词。地址代表着你在区块链上的账户，收发数字资产以及其它行为都离不开这个地址。这个地址怎么来的呢？很简单，生成你的公钥然后丢给sha算法，再然后你就可以获得地址了。\n\n![输入，输出](/images/2017-9-27-what-is-blockchain-i-o.jpg)\n\n好啦，说完p2p，密码学我们可以来聊聊分布式共识算法喽\n(￣▽￣)\n\n为什么需要共识算法呢？因为区块链需要很多台计算机才能保证数据具有不可变性。让一堆计算机可以在一起愉快工作的机制就是共识算法。\n\n共识算法不是个新鲜的东西，在区块链出现以前就有了paxos这一精妙的算法了（虽然很多人吐槽晦涩难懂）。之后又出现了更为简单易懂的raft算法。还有一个有名的算法叫做pbft算法，央行打造的区块链就采用了pbft算法的改进版。\n这三个算法和我们人类的社会制度蛮像的比如说领导者，投票者，候选者什么的，详细解释起来比较麻烦，在这里茯苓也就不说了，感兴趣的小伙伴可以去看看相关论文(｡･ω･｡)\n\n随着区块链的出现，一种颇具创造性的名为pow的算法也随之出现\n\npow即proof of work也就是工作量证明，很巧妙的通过工作量来维持不少区块链的运行，emmm，顺便一说，导致显卡涨了那么多的很大一部分原因就是这个算法╮(╯▽╰)╭\n\npow算法对电的需求量很大，换句话说就是，这玩应儿费电......\n\n然后这时候就有大佬出现了，提出了一种叫做pos(权益证明，proof of stake）的共识，运行方法就像在银行存钱然后给你利息一样，这样对电力的需求就不是那么大了，即便是这样，依旧是槽点满满，可优化的空间很大。\n\n还有一种算法叫做dpos，这个算法和人类社会也是蛮像的，找来一堆见证人，让他们为区块链工作，如果某一个见证人出了问题，其余节点（除了见证节点）就会发起投票找到新的见证人。\n\n整个区块链和分布式的账本很像，pow，pos，dpos都是为了解决谁来记账这个问题而存在的。如果在未来可以诞生更高效的共识算法那就太好了～\n\n说完区块链使用的三种技术，我们就可以进入到下一环节了，这这里茯苓将告诉大家区块链是怎么运行的。\n\n区块链为什么区块链呢？因为它是由区块和链组成的。把一个个区块连接起来就是区块链～\n\n首先，我们发起一个交易，然后我们会对其进行签名。注意啦，这里的交易不一定是指买，卖，还可以指投票，储存一段信息什么的。然后发起交易的节点会将交易信息发布到整个区块链网络。\n\n如果有很多人在用这个区块链的话，那么很短的一段时间内会有很多交易等待记录。\n\n现在网络上已经储存了很多未被记录的交易，在共识算法的作用下会有一个节点把一堆交易打包起来塞到一个块里。打包之后，这个节点会像整个节点宣布打包完成，然后这个区块会被其它节点同步。\n\n接下来重复这几步，区块打包这个过程会弄出一个叫头哈希的东西，区块之间正是通过头哈希来连接的。\n\n由于所有的节点记录着同样的信息，所以交易被打包到区块后就不可变了。好吧，这么说很牵强，实际上是有六个节点同步了含有你的那笔交易的区块我们就认为这笔交易是不可变的了。╮(╯▽╰)╭\n\n好啦，以上便是这篇文章要说的了，如果再深入的话就显得枯燥无味了～\n\n前边也说过了，区块链上的数据具有不可变性，所以做电子存证很方便，这篇文章就是使用了电子存证的～除此之外，区块链还可以被银行，证券所使用。甚至可以与物联网成为好基友。\n\n区块链的价值很大，但是茯苓觉得应该还有很多应用方式没有被挖掘出来。茯苓自己也在写区块链，希望在未来茯苓的萌链能有所作为。\n\n在这里提一下，这个世界上不乏骗子，很多人打着高新技术的旗号行诈骗之事，如果有想要在区块链行业投资的小伙伴请擦亮眼睛，认清价值所在，不要被骗。\n\n本文经「原本」原创认证，作者茯苓猫，访问yuanben.io查询【1N11OLN6】获取授权信息。 ","cover":"/images/2017-9-27-what-is-blockchain.jpeg","link":"what-is-blockchain.html","preview":"\u003cp\u003e简单的介绍一下区块链，稍具专业性\u003c/p\u003e\n","title":"区块链是个啥"},{"content":"\n\nemmm，想想专栏开通之后还什么都没写就感觉心好痛╮(╯▽╰)╭\n\n这篇文章也可以叫做《连2233都能明白比特币是个啥子》，当然叫《连阿黄都能明白什么是比特币》也行～\n今天是研究生招生预报名的日子，学校图书馆的渣电脑死活登录不上去，emmm，干脆在这个时候写篇文章好啦，(˶‾᷄ ⁻̫ ‾᷅˵)\n\n![看起来就很随意的图](/images/2017-09-26-01-bitcoin.png)\n\n想必，小伙伴们都听说过比特币这个东西吧（就算你没听过也不影响阅读此文2333），为什么这个看不见摸不到的东西就能产生价值呢？小伙伴们是不是心里面满满的都是疑惑，木事木事，你的疑惑便是茯苓我今天要说的东西。\n\n比特币最核心的东西其实叫做区块链，可以简单的理解为分布式账本（注意简单这个词）。那么分布式账本又是什么呢？看字面意思就知道啦，很多人一起用的账本就叫分布式账本啦，只不过它是分布式的（就是存在于很多个地方），不过本质上来说就是一个账本。\n\n这个账本存在于很多个地方，有很多人在用，所以谁来记账就成了一个问题，毕竟大家一起往账本上记东西容易乱套(｡･ω･｡)。前些日子总能听到显卡涨价这种事情，嗯，很有趣的是显卡涨价的很大一部分原因是因为世界上的一大堆人用显卡去争夺记账权了。我们将用显卡去争夺记账权这个行为成为挖矿，将挖矿的人叫做矿工。\n\n然后我们来说说为啥这些人要拿显卡去挖矿。争夺记账权实际上是在解决一个算数问题（为了让这篇文章易于理解，我就不说是什么问题了），这个算数问题的难度随着问题被解决的次数而逐渐增大，也就是说会越来越难，这样就需要很强的算力。比特币的设计者在最开始的时候其实是想让大家用cpu来算的，后来人们发现用显卡来算速度更快，也就不用cpu来算了。实际上，一个显卡来运算是远远不够的，所以人们开始使用一堆显卡来怼运算问题。于是这么一堆显卡就很形象的被称为矿场。\n\n为什么矿工们会痴迷于挖矿这个活动呢？因为矿工在获得记账权后，会获得一定数量的比特币奖励，将交易写在区块链这个大大的账本上后还能获得手续费。现在比特币的价格也是蛮高，所以说矿工们在金钱的诱惑下会乐此不疲的做这件事。\n\n比特币与黄金不同，黄金是硬通货，本身就具有价值（比如说你可以拿金子去做个项链什么的），比特币则不是这样，没什么价值，就是一堆数字。不过呢，比特币被很多人承认后便被赋予了价值。让我们想象一下比特币刚被创造出来的时候，一个叫做茯苓的家伙挖出来了比特币，然后一个叫大黄的人对比特币特别有兴趣，但是他不知道怎么挖，不知道除了茯苓以外还有什么渠道来获取比特币。于是大黄对茯苓说：嘿，茯苓，给我一个比特币怎么样，晚上请你吃大餐。然后茯苓通过分布式账本给大黄转了一个比特币过去，并吃了一顿大餐，大黄以一顿大餐为代价获得了比特币。\n当然，用美元，日元，欧元来换也可以～\n\n再后来，出现了比特币交易所，随着越来越多的人使用比特币，比特币的价格涨到了现在这个价格。当然这种疯狂的涨价有投机的成分在里面。前一阵子比特币的价格涨到三万去了，之后我们国家说不准境内以法币交易比特币，然后比特币的价格默默的跌了一万甚至更多（忽然想起一句话，建国后动物不准成精）。\nemmm，虽然是这样，但是某些人的坐等矿难好像并没出现哇，显卡依旧贵的不要不要的。虽然某些家伙会经常放出显卡大跌的消息，但是都不怎么靠谱233333。\n\n虽然比特币造就了不少财富神话，但是茯苓还是希望想要入坑的小伙伴谨慎一些。\n\n作为区块链爱好者一枚，茯苓正在写一个叫做萌链的区块链系统（谁叫我每天都觉得自己萌萌哒呢\n(˶‾᷄ ⁻̫ ‾᷅˵)），希望代码写完后能有小伙伴们加入到萌链这个区块链系统里来(o^^o)\n\n本文经「原本」原创认证，作者茯苓猫，访问yuanben.io查询【2INKVZUV】获取授权信息。 ","cover":"/images/2017-09-26-01-bitcoin.png","link":"what-is-bitcoin.html","preview":"\u003cp\u003e这篇文章也可以叫做《连2233都能明白比特币是个啥子》，当然叫《连阿黄都能明白什么是比特币》也行～\u003c/p\u003e\n","title":"比特币是个啥"},{"content":"\n\n## 纸小墨简介\n\n纸小墨（InkPaper）是一个GO语言编写的开源静态博客构建工具，可以快速搭建博客网站。它无依赖跨平台，配置简单构建快速，注重简洁易用与更优雅的排版。\n\n![纸小墨 - 简洁的静态博客构建工具](/images/example.png)\n\n### 开始上手\n\n- 下载并解压 [Ink](http://www.chole.io/)，运行命令 `ink preview`\n\n  \u003e 注意：Linux/macOS下，使用 `./ink preview`\n\n- 使用浏览器访问 `http://localhost:8000` 预览。\n\n### 特性介绍\n- YAML格式的配置\n- Markdown格式的文章\n- 无依赖跨平台\n- 超快的构建速度\n- 不断改善的主题与排版\n- 多文章作者支持\n- 归档与标签自动生成\n- 保存时实时预览页面\n- 离线的全文关键字搜索\n\n### 配置网站\n编辑`config.yml`，使用如下格式：\n\n``` yaml\nsite:\n    title: 网站标题\n    subtitle: 网站子标题\n    limit: 每页可显示的文章数目\n    theme: 网站主题目录\n    comment: 评论插件变量(默认为Disqus账户名)\n    root: 网站根路径 #可选\n    lang: 网站语言 #支持en, zh, ru, ja，可在theme/config.yml配置\n    url: 网站链接 #用于RSS生成\n    link: 文章链接形式 #默认为{title}.html，支持{year},{month},{day},{title}变量\n\nauthors:\n    作者ID:\n        name: 作者名称\n        intro: 作者简介\n        avatar: 作者头像路径\n\nbuild:\n    output: 构建输出目录 #可选, 默认为 \"public\"\n    port: 预览端口\n    copy:\n        - 构建时将会复制的目录/文件\n    publish: |\n        ink publish 命令将会执行的脚本\n```\n\n### 创建文章\n在`source`目录中建立任意`.md`文件（可置于子文件夹），使用如下格式：\n\n``` yaml\ntitle: 文章标题\ndate: 年-月-日 时:分:秒 #创建时间，可加时区如\" +0800\"\nupdate: 年-月-日 时:分:秒 #更新时间，可选，可加时区如\" +0800\"\nauthor: 作者ID\ncover: 题图链接 #可选\ndraft: false #草稿，可选\ntop: false #置顶文章，可选\npreview: 文章预览，也可在正文中使用\u003c!--more--\u003e分割 #可选\ntags: #可选\n    - 标签1\n    - 标签2\ntype: post #指定类型为文章(post)或页面(page)，可选\nhide: false #隐藏文章，只可通过链接访问，可选\n\n---\n\nMarkdown格式的正文\n```\n\n### 发布博客\n- 在博客目录下运行`ink publish`命令自动构建博客并发布。\n- 或运行`ink build`命令将生成的`public`目录下的内容手动部署。\n\n\u003e Tips: 在使用`ink preview`命令时，编辑保存文件后，博客会自动重新构建并刷新浏览器页面。\n\n## 定制支持\n\n### 修改主题\n\n默认主题在`theme`目录下，修改源代码后在该目录下运行`npm install`与`npm run build`重新构建。\n\n页面包含`page.html`（文章列表）及`article.html`（文章）等，所有页面均支持[GO语言HTML模板](http://golang.org/pkg/html/template/)语法，可引用变量。\n\n### 添加页面\n\n在`source`目录下创建的任意`.html`文件将被复制，这些文件中可引用`config.yml`中site字段下的所有变量。\n\n### 博客迁移(Beta)\n\n纸小墨提供简单的Jeklly/Hexo博客文章格式转换，使用命令：\n``` shell\nink convert /path/_posts\n```\n\n### 源码编译\n\n本地运行\n\n1. 配置[GO](http://golang.org/doc/install)语言环境。\n2. 运行命令`go get github.com/InkProject/ink`，编译并获取ink。\n3. 运行命令`ink preview $GOPATH/src/github.com/InkProject/ink/template`，预览博客。\n\nDocker构建（示例）\n\n1. Clone源码 `git clone git@github.com:InkProject/ink.git`。\n2. 源码目录下构建镜像`docker build -t ink .`。\n3. 运行容器`docker run -p 8000:80 ink`。\n\n## 主题\n\n- Dark(Official Theme): [https://github.com/InkProject/ink-theme-dark](https://github.com/InkProject/ink-theme-dark)\n- simple: [https://github.com/myiq/ink-simple](https://github.com/myiq/ink-simple)\n\n## 相关链接\n\n- [InkPaper 最佳实践](https://segmentfault.com/a/1190000009084954)\n\n## 反馈贡献\n\n纸小墨基于 [CC Attribution-NonCommercial License 4.0](https://creativecommons.org/licenses/by-nc/4.0/) 协议，目前为止它仍然是个非成熟的开源项目，非常欢迎任何人的任何贡献。如有问题可报告至 [https://github.com/InkProject/ink/issues](https://github.com/InkProject/ink/issues)。\n\n## 更新历史\n\n- [2016-07-11] 修复诸多Issue与合并一些PR。\n- [2015-08-15] 一些Bug修复，新增RSS订阅支持，主题改善。\n- [2015-07-04] 数项Bug修复与主题改善，支持置顶，多语言，子模板。\n- [2015-06-04] 编译更多平台版本，增加标签与存档页。\n- [2015-03-01] Beta版本，基础功能完成。\n\n## 更新计划\n\n- 排版深度优化\n- 纸小墨编辑器\n\n## 正在使用\n\n- [http://www.chole.io/blog/](http://www.chole.io/blog/)\n- [http://blog.hyper.sh/](http://blog.hyper.sh/)\n- [http://wangxu.me/](http://wangxu.me/)\n- [http://whzecomjm.com/](http://whzecomjm.com/)\n- [http://www.shery.me/blog/](http://www.shery.me/blog/)\n","cover":"/images/example.png","link":"ink-blog-tool.html","preview":"\u003cp\u003e纸小墨（InkPaper）是一个GO语言编写的开源静态博客构建工具，可以快速搭建博客网站。它无依赖跨平台，配置简单构建快速，注重简洁易用与更优雅的排版。\u003c/p\u003e\n","title":"简洁的静态博客构建工具 —— 纸小墨（InkPaper）"}]